from django.db import models


class Opponent(models.Model):
    name = models.CharField()
    image = models.CharField()
    fixture_date = models.DateField()
    fixture_time = models.TimeField()
    summary = models.ForeignKey('Summary', on_delete=models.CASCADE)
    attacking = models.ForeignKey('Attacking', on_delete=models.CASCADE)
    passes = models.ForeignKey('Passing', on_delete=models.CASCADE)
    defending = models.ForeignKey('Defending', on_delete=models.CASCADE)
    other = models.ForeignKey('other', on_delete=models.CASCADE)


class Summary(models.Model):
    matches = models.IntegerField()
    goals_scored = models.IntegerField()
    goals_conceded = models.IntegerField()
    assists = models.IntegerField()

class Attacking(models.Model):
    goals_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    penalty_goals_scored = models.IntegerField()
    penalty_goals_attempted = models.IntegerField()
    free_kick_goals_attempted = models.IntegerField()
    free_kick_goals_scored = models.IntegerField()
    goals_inside_box_attempted = models.IntegerField()
    goals_inside_box_scored = models.IntegerField()
    goals_outside_box_attempted = models.IntegerField()
    goals_outside_box_scored = models.IntegerField()
    left_foot_goals = models.IntegerField()
    right_foot_goals = models.IntegerField()
    headed_goals = models.IntegerField()
    big_chances_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    big_chances_missed_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    total_shots_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    shots_on_target_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    shots_off_target_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    blocked_shots_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    successful_dribbles_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    corners_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    free_kicks_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    hit_woodwork = models.IntegerField()
    counter_attacks = models.IntegerField()

class Passing(models.Model):
    ball_possession_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    accurate_passes = models.IntegerField()
    accurate_passes_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    acc_own_half = models.IntegerField()
    acc_own_half_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    acc_opposition_half = models.IntegerField()
    acc_opposition_half_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    acc_long_balls = models.DecimalField(max_digits=5, decimal_places=2)
    acc_long_balls_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    acc_crosses = models.DecimalField(max_digits=5, decimal_places=2)
    acc_crosses_percentage = models.DecimalField(max_digits=5, decimal_places=3)

class Defending(models.Model):
    clean_sheets = models.IntegerField()
    goals_conceded_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    tackles_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    interceptions_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    clearances_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    saves_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    balls_recovered_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    errors_leading_to_shot = models.IntegerField()
    errors_leading_to_goal = models.IntegerField()
    penalties_committed = models.IntegerField()
    penalty_goals_conceded = models.IntegerField()
    clearance_off_line = models.IntegerField()
    last_man_tackle = models.IntegerField()

class Other(models.Model):
    duels_won_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    duels_won_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    ground_duels_won = models.DecimalField(max_digits=5, decimal_places=2)
    ground_duels_won_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    aerial_duels_won = models.DecimalField(max_digits=5, decimal_places=2)
    aerial_duels_won_percentage = models.DecimalField(max_digits=5, decimal_places=3)
    possession_lost_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    throw_ins_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    goal_kicks_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    offsides_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    fouls_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    yellow_cards_per_game = models.DecimalField(max_digits=5, decimal_places=2)
    red_cards = models.IntegerField()
